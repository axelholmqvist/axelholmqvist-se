{"ast":null,"code":"var _jsxFileName = \"/Users/axelholmqvist/Developer/axelholmqvist-se/src/components/Particles/Particles.js\",\n    _s = $RefreshSig$();\n\nimport \"./Particles.scss\";\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Particles() {\n  _s();\n\n  const refContainer = useRef(null);\n  var renderer = new THREE.WebGLRenderer({\n    alpha: true,\n    antialias: true\n  });\n  var scene = new THREE.Scene();\n  var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n  var sphere_geometry = new THREE.SphereGeometry(0.1, 24, 24);\n  var material = new THREE.MeshNormalMaterial({\n    wireframe: true\n  });\n  var sphere = new THREE.Mesh(sphere_geometry, material); //const script = document.createElement(\"script\");\n  //script.src = \"../../assets/scripts/perlin.js\";\n  //script.async = true;\n  //document.body.appendChild(script);\n\n  function animate() {\n    //sphere.rotation.x += 0.01;\n    //sphere.rotation.y += 0.01;\n    renderer.render(scene, camera); //requestAnimationFrame(animate);\n  }\n\n  useEffect(() => {\n    refContainer.current.appendChild(renderer.domElement); // default bg canvas color //\n    //renderer.setClearColor(0x7b7b7b);\n    //  use device aspect ratio //\n\n    renderer.setPixelRatio(window.devicePixelRatio); // set size of canvas within window //\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    camera.position.z = 5;\n\n    for (var i = 0; i < 10; i++) {\n      sphere.position.x = 0 + i * 1;\n      scene.add(sphere);\n    }\n\n    requestAnimationFrame(animate); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refContainer,\n    className: \"particles\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Particles, \"PGRU+J3oZAAOdg9sBlM5QzF2boo=\");\n\n_c = Particles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Particles\");","map":{"version":3,"sources":["/Users/axelholmqvist/Developer/axelholmqvist-se/src/components/Particles/Particles.js"],"names":["React","useEffect","useRef","THREE","Particles","refContainer","renderer","WebGLRenderer","alpha","antialias","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","sphere_geometry","SphereGeometry","material","MeshNormalMaterial","wireframe","sphere","Mesh","animate","render","current","appendChild","domElement","setPixelRatio","devicePixelRatio","setSize","position","z","i","x","add","requestAnimationFrame"],"mappings":";;;AAAA,OAAO,kBAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAElC,QAAMC,YAAY,GAAGH,MAAM,CAAC,IAAD,CAA3B;AAEA,MAAII,QAAQ,GAAG,IAAIH,KAAK,CAACI,aAAV,CAAwB;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,SAAS,EAAC;AAAzB,GAAxB,CAAf;AACA,MAAIC,KAAK,GAAG,IAAIP,KAAK,CAACQ,KAAV,EAAZ;AACA,MAAIC,MAAM,GAAG,IAAIT,KAAK,CAACU,iBAAV,CAA6B,EAA7B,EAAiCC,MAAM,CAACC,UAAP,GAAkBD,MAAM,CAACE,WAA1D,EAAuE,GAAvE,EAA4E,IAA5E,CAAb;AACA,MAAIC,eAAe,GAAG,IAAId,KAAK,CAACe,cAAV,CAAyB,GAAzB,EAA8B,EAA9B,EAAkC,EAAlC,CAAtB;AACA,MAAIC,QAAQ,GAAG,IAAIhB,KAAK,CAACiB,kBAAV,CAA8B;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAA9B,CAAf;AACA,MAAIC,MAAM,GAAG,IAAInB,KAAK,CAACoB,IAAV,CAAeN,eAAf,EAAgCE,QAAhC,CAAb,CATkC,CAWlC;AACA;AACA;AACA;;AAEA,WAASK,OAAT,GAAmB;AACjB;AACA;AAEAlB,IAAAA,QAAQ,CAACmB,MAAT,CAAgBf,KAAhB,EAAsBE,MAAtB,EAJiB,CAKjB;AACD;;AAEDX,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY,CAACqB,OAAb,CAAqBC,WAArB,CAAkCrB,QAAQ,CAACsB,UAA3C,EADc,CAGd;AACA;AACA;;AACAtB,IAAAA,QAAQ,CAACuB,aAAT,CAAuBf,MAAM,CAACgB,gBAA9B,EANc,CAOd;;AACAxB,IAAAA,QAAQ,CAACyB,OAAT,CAAiBjB,MAAM,CAACC,UAAxB,EAAoCD,MAAM,CAACE,WAA3C;AAEAJ,IAAAA,MAAM,CAACoB,QAAP,CAAgBC,CAAhB,GAAoB,CAApB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBZ,MAAAA,MAAM,CAACU,QAAP,CAAgBG,CAAhB,GAAoB,IAAID,CAAC,GAAC,CAA1B;AACAxB,MAAAA,KAAK,CAAC0B,GAAN,CAAUd,MAAV;AACH;;AAEDe,IAAAA,qBAAqB,CAACb,OAAD,CAArB,CAjBc,CAkBd;AACD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACE;AAAK,IAAA,GAAG,EAAEnB,YAAV;AAAwB,IAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAhDuBD,S;;KAAAA,S","sourcesContent":["import \"./Particles.scss\";\n\nimport React, { useEffect, useRef } from 'react';\n\nimport * as THREE from \"three\";\n\nexport default function Particles() {\n\n  const refContainer = useRef(null);\n\n  var renderer = new THREE.WebGLRenderer({ alpha: true, antialias:true});\n  var scene = new THREE.Scene();\n  var camera = new THREE.PerspectiveCamera( 45, window.innerWidth/window.innerHeight, 0.1, 1000 );\n  var sphere_geometry = new THREE.SphereGeometry(0.1, 24, 24);\n  var material = new THREE.MeshNormalMaterial( {wireframe: true });\n  var sphere = new THREE.Mesh(sphere_geometry, material);\n\n  //const script = document.createElement(\"script\");\n  //script.src = \"../../assets/scripts/perlin.js\";\n  //script.async = true;\n  //document.body.appendChild(script);\n\n  function animate() {\n    //sphere.rotation.x += 0.01;\n    //sphere.rotation.y += 0.01;\n\n    renderer.render(scene,camera);\n    //requestAnimationFrame(animate);\n  }\n\n  useEffect(() => {    \n    refContainer.current.appendChild( renderer.domElement );\n    \n    // default bg canvas color //\n    //renderer.setClearColor(0x7b7b7b);\n    //  use device aspect ratio //\n    renderer.setPixelRatio(window.devicePixelRatio);\n    // set size of canvas within window //\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    camera.position.z = 5;\n\n    for (var i = 0; i < 10; i++) {\n        sphere.position.x = 0 + i*1;\n        scene.add(sphere);\n    }\n\n    requestAnimationFrame(animate);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div ref={refContainer} className=\"particles\"/>\n  )\n}"]},"metadata":{},"sourceType":"module"}