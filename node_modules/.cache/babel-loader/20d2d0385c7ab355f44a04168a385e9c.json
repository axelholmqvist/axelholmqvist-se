{"ast":null,"code":"var _jsxFileName = \"/Users/axelholmqvist/Developer/axelholmqvist-se/src/pages/Landing/Landing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport \"./Landing.scss\";\nimport * as THREE from \"three\";\nimport Hero from \"../../components/Hero/Hero\";\nimport Page from '../../components/Page/Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Landing() {\n  _s();\n\n  const refContainer = useRef(null);\n  var renderer = new THREE.WebGLRenderer({\n    alpha: true,\n    antialias: true\n  });\n  var scene = new THREE.Scene();\n  var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n  var sphere_geometry = new THREE.SphereGeometry(1, 128, 128);\n  var material = new THREE.MeshNormalMaterial();\n  var sphere = new THREE.Mesh(sphere_geometry, material);\n\n  var update = function () {\n    // change '0.003' for more aggressive animation\n    var time = performance.now() * 0.003; //console.log(time)\n    //go through vertices here and reposition them\n    // change 'k' value for more spikes\n\n    var k = 1; //for (var i = 0; i < sphere.geometry.vertices.length; i++) {\n\n    for (var i = 0; i < sphere.geometry.attributes.position.array.length; i++) {\n      var p = sphere.geometry.vertices[i];\n      p.normalize().multiplyScalar(1 + 0.3 * noise.perlin3(p.x * k + time, p.y * k, p.z * k));\n    }\n\n    sphere.geometry.computeVertexNormals();\n    sphere.geometry.normalsNeedUpdate = true;\n    sphere.geometry.verticesNeedUpdate = true;\n  };\n\n  function animate() {\n    //sphere.rotation.x += 0.01;\n    //sphere.rotation.y += 0.01;\n    update();\n    /* render scene and camera */\n\n    renderer.render(scene, camera);\n    requestAnimationFrame(animate);\n  }\n\n  useEffect(() => {\n    /*global noise*/\n    // To disable any eslint 'noise not defined' errors\n    const script = document.createElement(\"script\");\n    script.src = \"https://www.fariskassim.com/stage/rebel9/teaf/blob/v4/js/perlin.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    refContainer.current.appendChild(renderer.domElement); // default bg canvas color //\n    //renderer.setClearColor(0x7b7b7b);\n    //  use device aspect ratio //\n\n    renderer.setPixelRatio(window.devicePixelRatio); // set size of canvas within window //\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    camera.position.z = 5;\n    scene.add(sphere);\n    console.log(sphere.geometry.attributes.position);\n    requestAnimationFrame(animate);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: /*#__PURE__*/_jsxDEV(Hero, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: refContainer,\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Landing, \"PGRU+J3oZAAOdg9sBlM5QzF2boo=\");\n\n_c = Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"sources":["/Users/axelholmqvist/Developer/axelholmqvist-se/src/pages/Landing/Landing.js"],"names":["React","useEffect","useRef","THREE","Hero","Page","Landing","refContainer","renderer","WebGLRenderer","alpha","antialias","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","sphere_geometry","SphereGeometry","material","MeshNormalMaterial","sphere","Mesh","update","time","performance","now","k","i","geometry","attributes","position","array","length","p","vertices","normalize","multiplyScalar","noise","perlin3","x","y","z","computeVertexNormals","normalsNeedUpdate","verticesNeedUpdate","animate","render","requestAnimationFrame","script","document","createElement","src","async","body","appendChild","current","domElement","setPixelRatio","devicePixelRatio","setSize","add","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nimport \"./Landing.scss\";\n\nimport * as THREE from \"three\";\n\nimport Hero from \"../../components/Hero/Hero\";\nimport Page from '../../components/Page/Page';\n\nexport default function Landing() {\n\n  const refContainer = useRef(null);\n\n  var renderer = new THREE.WebGLRenderer({ alpha: true, antialias:true});\n  var scene = new THREE.Scene();\n  var camera = new THREE.PerspectiveCamera( 45, window.innerWidth/window.innerHeight, 0.1, 1000 );\n  var sphere_geometry = new THREE.SphereGeometry(1, 128, 128);\n  var material = new THREE.MeshNormalMaterial();\n  var sphere = new THREE.Mesh(sphere_geometry, material);\n\n  var update = function() {\n\n    // change '0.003' for more aggressive animation\n    var time = performance.now() * 0.003;\n    //console.log(time)\n\n    //go through vertices here and reposition them\n    \n    // change 'k' value for more spikes\n    var k = 1;\n\n    //for (var i = 0; i < sphere.geometry.vertices.length; i++) {\n    for (var i = 0; i <     sphere.geometry.attributes.position.array.length; i++) {\n        var p = sphere.geometry.vertices[i];\n        p.normalize().multiplyScalar(1 + 0.3 * noise.perlin3(p.x * k + time, p.y * k, p.z * k));\n    }\n    \n    sphere.geometry.computeVertexNormals();\n    sphere.geometry.normalsNeedUpdate = true;\n    sphere.geometry.verticesNeedUpdate = true;\n\n\n  }\n\n  function animate() {\n    //sphere.rotation.x += 0.01;\n    //sphere.rotation.y += 0.01;\n\n    update();\n    /* render scene and camera */\n    renderer.render(scene,camera);\n    requestAnimationFrame(animate);\n  }\n\n  useEffect(() => {\n    /*global noise*/ // To disable any eslint 'noise not defined' errors\n\n    const script = document.createElement(\"script\");\n    script.src = \"https://www.fariskassim.com/stage/rebel9/teaf/blob/v4/js/perlin.js\";\n    script.async = true;\n    document.body.appendChild(script);\n    \n    refContainer.current.appendChild( renderer.domElement );\n    \n    // default bg canvas color //\n    //renderer.setClearColor(0x7b7b7b);\n    //  use device aspect ratio //\n    renderer.setPixelRatio(window.devicePixelRatio);\n    // set size of canvas within window //\n    renderer.setSize(window.innerWidth, window.innerHeight);\n\n    camera.position.z = 5;\n\n    scene.add(sphere);\n\n    console.log(sphere.geometry.attributes.position);\n\n    requestAnimationFrame(animate);\n  }, []);\n\n  return (\n    <Page>\n        <Hero>\n            <div ref={refContainer} className=\"\"/>\n        </Hero>\n    </Page>\n  );\n}"]},"metadata":{},"sourceType":"module"}