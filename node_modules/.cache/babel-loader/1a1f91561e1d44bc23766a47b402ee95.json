{"ast":null,"code":"var _jsxFileName = \"/Users/axelholmqvist/Developer/axelholmqvist-se/src/pages/Landing/Landing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport \"./Landing.scss\";\nimport * as THREE from \"three\";\nimport Hero from \"../../components/Hero/Hero\";\nimport Page from '../../components/Page/Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Landing() {\n  _s();\n\n  const refContainer = useRef(null);\n  useEffect(() => {\n    // === THREE.JS CODE START ===\n    const SEPARATION = 100,\n          AMOUNTX = 50,\n          AMOUNTY = 50;\n    let container, stats;\n    let camera, scene, renderer;\n    let particles,\n        count = 0;\n    let mouseX = 0,\n        mouseY = 0;\n    let windowHalfX = window.innerWidth / 2;\n    let windowHalfY = window.innerHeight / 2;\n    init();\n    animate();\n\n    function init() {\n      container = document.createElement('div');\n      document.body.appendChild(container);\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 10000);\n      camera.position.z = 1000;\n      scene = new THREE.Scene(); //\n\n      const numParticles = AMOUNTX * AMOUNTY;\n      const positions = new Float32Array(numParticles * 3);\n      const scales = new Float32Array(numParticles);\n      let i = 0,\n          j = 0;\n\n      for (let ix = 0; ix < AMOUNTX; ix++) {\n        for (let iy = 0; iy < AMOUNTY; iy++) {\n          positions[i] = ix * SEPARATION - AMOUNTX * SEPARATION / 2; // x\n\n          positions[i + 1] = 0; // y\n\n          positions[i + 2] = iy * SEPARATION - AMOUNTY * SEPARATION / 2; // z\n\n          scales[j] = 1;\n          i += 3;\n          j++;\n        }\n      }\n\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n      geometry.setAttribute('scale', new THREE.BufferAttribute(scales, 1));\n      const material = new THREE.ShaderMaterial({\n        uniforms: {\n          color: {\n            value: new THREE.Color(0xffffff)\n          }\n        },\n        vertexShader: document.getElementById('vertexshader').textContent,\n        fragmentShader: document.getElementById('fragmentshader').textContent\n      }); //\n\n      particles = new THREE.Points(geometry, material);\n      scene.add(particles); //\n\n      renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setPixelRatio(window.devicePixelRatio);\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      container.appendChild(renderer.domElement);\n      stats = new Stats();\n      container.appendChild(stats.dom);\n      container.style.touchAction = 'none';\n      container.addEventListener('pointermove', onPointerMove); //\n\n      window.addEventListener('resize', onWindowResize);\n    }\n\n    function onWindowResize() {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    } //\n\n\n    function onPointerMove(event) {\n      if (event.isPrimary === false) return;\n      mouseX = event.clientX - windowHalfX;\n      mouseY = event.clientY - windowHalfY;\n    } //\n\n\n    function animate() {\n      requestAnimationFrame(animate);\n      render();\n      stats.update();\n    }\n\n    function render() {\n      camera.position.x += (mouseX - camera.position.x) * .05;\n      camera.position.y += (-mouseY - camera.position.y) * .05;\n      camera.lookAt(scene.position);\n      const positions = particles.geometry.attributes.position.array;\n      const scales = particles.geometry.attributes.scale.array;\n      let i = 0,\n          j = 0;\n\n      for (let ix = 0; ix < AMOUNTX; ix++) {\n        for (let iy = 0; iy < AMOUNTY; iy++) {\n          positions[i + 1] = Math.sin((ix + count) * 0.3) * 50 + Math.sin((iy + count) * 0.5) * 50;\n          scales[j] = (Math.sin((ix + count) * 0.3) + 1) * 20 + (Math.sin((iy + count) * 0.5) + 1) * 20;\n          i += 3;\n          j++;\n        }\n      }\n\n      particles.geometry.attributes.position.needsUpdate = true;\n      particles.geometry.attributes.scale.needsUpdate = true;\n      renderer.render(scene, camera);\n      count += 0.1;\n    } // === THREE.JS EXAMPLE CODE END ===\n\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: /*#__PURE__*/_jsxDEV(Hero, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: refContainer,\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Landing, \"PGRU+J3oZAAOdg9sBlM5QzF2boo=\");\n\n_c = Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"sources":["/Users/axelholmqvist/Developer/axelholmqvist-se/src/pages/Landing/Landing.js"],"names":["React","useEffect","useRef","THREE","Hero","Page","Landing","refContainer","SEPARATION","AMOUNTX","AMOUNTY","container","stats","camera","scene","renderer","particles","count","mouseX","mouseY","windowHalfX","window","innerWidth","windowHalfY","innerHeight","init","animate","document","createElement","body","appendChild","PerspectiveCamera","position","z","Scene","numParticles","positions","Float32Array","scales","i","j","ix","iy","geometry","BufferGeometry","setAttribute","BufferAttribute","material","ShaderMaterial","uniforms","color","value","Color","vertexShader","getElementById","textContent","fragmentShader","Points","add","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","domElement","Stats","dom","style","touchAction","addEventListener","onPointerMove","onWindowResize","aspect","updateProjectionMatrix","event","isPrimary","clientX","clientY","requestAnimationFrame","render","update","x","y","lookAt","attributes","array","scale","Math","sin","needsUpdate"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nimport \"./Landing.scss\";\n\nimport * as THREE from \"three\";\n\nimport Hero from \"../../components/Hero/Hero\";\nimport Page from '../../components/Page/Page';\n\nexport default function Landing() {\n\n  const refContainer = useRef(null);\n\n  useEffect(() => {\n    // === THREE.JS CODE START ===\n\n    const SEPARATION = 100, AMOUNTX = 50, AMOUNTY = 50;\n\n    let container, stats;\n    let camera, scene, renderer;\n\n    let particles, count = 0;\n\n    let mouseX = 0, mouseY = 0;\n\n    let windowHalfX = window.innerWidth / 2;\n    let windowHalfY = window.innerHeight / 2;\n\n    init();\n    animate();\n\n    function init() {\n\n      container = document.createElement( 'div' );\n      document.body.appendChild( container );\n\n      camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\n      camera.position.z = 1000;\n\n      scene = new THREE.Scene();\n\n      //\n\n      const numParticles = AMOUNTX * AMOUNTY;\n\n      const positions = new Float32Array( numParticles * 3 );\n      const scales = new Float32Array( numParticles );\n\n      let i = 0, j = 0;\n\n      for ( let ix = 0; ix < AMOUNTX; ix ++ ) {\n\n        for ( let iy = 0; iy < AMOUNTY; iy ++ ) {\n\n          positions[ i ] = ix * SEPARATION - ( ( AMOUNTX * SEPARATION ) / 2 ); // x\n          positions[ i + 1 ] = 0; // y\n          positions[ i + 2 ] = iy * SEPARATION - ( ( AMOUNTY * SEPARATION ) / 2 ); // z\n\n          scales[ j ] = 1;\n\n          i += 3;\n          j ++;\n\n        }\n\n      }\n\n      const geometry = new THREE.BufferGeometry();\n      geometry.setAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\n      geometry.setAttribute( 'scale', new THREE.BufferAttribute( scales, 1 ) );\n\n      const material = new THREE.ShaderMaterial( {\n\n        uniforms: {\n          color: { value: new THREE.Color( 0xffffff ) },\n        },\n        vertexShader: document.getElementById( 'vertexshader' ).textContent,\n        fragmentShader: document.getElementById( 'fragmentshader' ).textContent\n\n      } );\n\n      //\n\n      particles = new THREE.Points( geometry, material );\n      scene.add( particles );\n\n      //\n\n      renderer = new THREE.WebGLRenderer( { antialias: true } );\n      renderer.setPixelRatio( window.devicePixelRatio );\n      renderer.setSize( window.innerWidth, window.innerHeight );\n      container.appendChild( renderer.domElement );\n\n      stats = new Stats();\n      container.appendChild( stats.dom );\n\n      container.style.touchAction = 'none';\n      container.addEventListener( 'pointermove', onPointerMove );\n\n      //\n\n      window.addEventListener( 'resize', onWindowResize );\n\n    }\n\n    function onWindowResize() {\n\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n\n      renderer.setSize( window.innerWidth, window.innerHeight );\n\n    }\n\n    //\n\n    function onPointerMove( event ) {\n\n      if ( event.isPrimary === false ) return;\n\n      mouseX = event.clientX - windowHalfX;\n      mouseY = event.clientY - windowHalfY;\n\n    }\n\n    //\n\n    function animate() {\n\n      requestAnimationFrame( animate );\n\n      render();\n      stats.update();\n\n    }\n\n    function render() {\n\n      camera.position.x += ( mouseX - camera.position.x ) * .05;\n      camera.position.y += ( - mouseY - camera.position.y ) * .05;\n      camera.lookAt( scene.position );\n\n      const positions = particles.geometry.attributes.position.array;\n      const scales = particles.geometry.attributes.scale.array;\n\n      let i = 0, j = 0;\n\n      for ( let ix = 0; ix < AMOUNTX; ix ++ ) {\n\n        for ( let iy = 0; iy < AMOUNTY; iy ++ ) {\n\n          positions[ i + 1 ] = ( Math.sin( ( ix + count ) * 0.3 ) * 50 ) +\n                  ( Math.sin( ( iy + count ) * 0.5 ) * 50 );\n\n          scales[ j ] = ( Math.sin( ( ix + count ) * 0.3 ) + 1 ) * 20 +\n                  ( Math.sin( ( iy + count ) * 0.5 ) + 1 ) * 20;\n\n          i += 3;\n          j ++;\n\n        }\n\n      }\n\n      particles.geometry.attributes.position.needsUpdate = true;\n      particles.geometry.attributes.scale.needsUpdate = true;\n\n      renderer.render( scene, camera );\n\n      count += 0.1;\n\n    }\n    // === THREE.JS EXAMPLE CODE END ===\n  }, []);\n\n  return (\n    <Page>\n        <Hero>\n            <div ref={refContainer} className=\"\"/>\n        </Hero>\n    </Page>\n  );\n}"]},"metadata":{},"sourceType":"module"}